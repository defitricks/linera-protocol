(function() {var type_impls = {
"linera_chain":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#85-92\">source</a><a href=\"#impl-Clone-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#86-91\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","linera_chain::certificate::value::HashedCertificateValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#15\">source</a><a href=\"#impl-Debug-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#15\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linera_chain::certificate::value::HashedCertificateValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#76-83\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"linera_base/crypto/trait.BcsHashable.html\" title=\"trait linera_base::crypto::BcsHashable\">BcsHashable</a>&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#77-82\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","linera_chain::certificate::value::HashedCertificateValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#22-65\">source</a><a href=\"#impl-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_new\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#28-30\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.unchecked_new\" class=\"fn\">unchecked_new</a>(value: T, hash: <a class=\"struct\" href=\"linera_base/crypto/struct.CryptoHash.html\" title=\"struct linera_base::crypto::CryptoHash\">CryptoHash</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates an instance of <a href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\"><code>Hashed</code></a> with the given <code>hash</code> value.</p>\n<p>Note on usage: This method is unsafe because it allows the caller to create a Hashed\nwith a hash that doesn’t match the value. This is necessary for the rewrite state when\nsigners sign over old <code>Certificate</code> type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#36-42\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.new\" class=\"fn\">new</a>(value: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"linera_base/crypto/trait.BcsHashable.html\" title=\"trait linera_base::crypto::BcsHashable\">BcsHashable</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates an instance of <a href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\"><code>Hashed</code></a> with the given <code>value</code>.</p>\n<p>Note: Contrary to its <code>unchecked_new</code> counterpart, this method is safe because it\ncalculates the hash from the value.</p>\n</div></details><section id=\"method.hash\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#44-46\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.hash\" class=\"fn\">hash</a>(&amp;self) -&gt; <a class=\"struct\" href=\"linera_base/crypto/struct.CryptoHash.html\" title=\"struct linera_base::crypto::CryptoHash\">CryptoHash</a></h4></section><section id=\"method.inner\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#48-50\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.inner\" class=\"fn\">inner</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a></h4></section><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#52-54\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section><section id=\"method.lite\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#56-64\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_chain/types/struct.Hashed.html#tymethod.lite\" class=\"fn\">lite</a>(&amp;self) -&gt; <a class=\"struct\" href=\"linera_chain/data_types/struct.LiteValue.html\" title=\"struct linera_chain::data_types::LiteValue\">LiteValue</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"linera_chain/types/trait.Has.html\" title=\"trait linera_chain::types::Has\">Has</a>&lt;<a class=\"struct\" href=\"linera_base/identifiers/struct.ChainId.html\" title=\"struct linera_base::identifiers::ChainId\">ChainId</a>&gt;,</div></h4></section></div></details>",0,"linera_chain::certificate::value::HashedCertificateValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#95-99\">source</a><a href=\"#impl-PartialEq-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#96-98\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","linera_chain::certificate::value::HashedCertificateValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#67-74\">source</a><a href=\"#impl-Serialize-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#68-73\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","linera_chain::certificate::value::HashedCertificateValue"],["<section id=\"impl-Eq-for-Hashed%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_chain/certificate/hashed.rs.html#102\">source</a><a href=\"#impl-Eq-for-Hashed%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"linera_chain/types/struct.Hashed.html\" title=\"struct linera_chain::types::Hashed\">Hashed</a>&lt;T&gt;</h3></section>","Eq","linera_chain::certificate::value::HashedCertificateValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()